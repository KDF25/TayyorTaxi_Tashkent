import datetime
from string import Template

from pgsql import pg
from text.function.function import TextFunc
from text.language.main import Text_main

func = TextFunc()
Txt = Text_main()


class FormAdmin:

    async def every_day_client(self, language: str, num: int):
        Text_lang = Txt.language[language]
        text = Template("$text1 <b>$num</b> $text2")
        text = text.substitute(text1=Text_lang.reminder.client1, text2=Text_lang.reminder.client2, num=num)
        return text

    async def every_day_driver(self, language: str, num: int):
        Text_lang = Txt.language[language]
        text = Template("$text1 <b>$num</b> $text2")
        text = text.substitute(text1=Text_lang.reminder.driver1, text2=Text_lang.reminder.driver2, num=num)
        return text

    async def client(self, num: int):
        text = f"üá∫üáøüì£ <b>{num}</b> ta dan ortiq haydovchilar bugun sizning yo‚Äônalishingiz boyicha yo‚Äôlga chiqishmoqchi. " \
             f"O‚Äôzingizga qulay haydovchini topishga ulguring! üëá \n\n" \
             f"üá∑üá∫üì£ –°–≤—ã—à–µ <b>{num}</b> –≤–æ–¥–∏—Ç–µ–ª–µ–π —Å–æ–±–∏—Ä–∞—é—Ç—Å—è —Å–µ–≥–æ–¥–Ω—è –µ—Ö–∞—Ç—å –ø–æ –≤–∞—à–µ–º—É –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—é. " \
             f"–£—Å–ø–µ–π—Ç–µ –Ω–∞–π—Ç–∏ –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ –∏–º–µ–Ω–Ω–æ –¥–ª—è –≤–∞—à–µ–π –ø–æ–µ–∑–¥–∫–∏! üëá"
        return text

    async def driver(self, num: int):
        text = f'üá∫üáøüì£ <b>{num}</b> ta dan ortiq yo‚Äôlovchilar bugun sizning yo‚Äônalishingiz boyicha yo‚Äôlga chiqishmoqchi. ' \
               f'Faol bo‚Äôlishga ulguring! \n\n Faol bolish uchun ¬´üöï Yo‚Äôlovchilar kerak¬ª tugmasini bosing üëá\n\n ' \
               f'üá∑üá∫üì£ –°–≤—ã—à–µ <b>{num}</b> –ø–∞—Å—Å–∞–∂–∏—Ä–æ–≤ —Å–æ–±–∏—Ä–∞—é—Ç—Å—è —Å–µ–≥–æ–¥–Ω—è –µ—Ö–∞—Ç—å –ø–æ –≤–∞—à–µ–º—É –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—é. ' \
               f'–£—Å–ø–µ–π—Ç–µ —Å—Ç–∞—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–º, —á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –∏–º–µ–Ω–Ω–æ –¥–ª—è –≤–∞—Å! \n\n ' \
               f'–ñ–º–∏—Ç–µ ¬´üöï –ù—É–∂–Ω—ã –ø–∞—Å—Å–∞–∂–∏—Ä—ã¬ª —á—Ç–æ–±—ã —Å—Ç–∞—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–º üëá'
        return text


    async def left_days(self, language: str, days: int, wallet: int, date):
        Text_lang = Txt.language[language]
        date = datetime.datetime.strftime(date, "%d.%m.%y")
        wallet = await func.int_to_str(num=wallet)
        day = ''
        if language == 'rus':
            day = '–¥–µ–Ω—å' if days == 1 else '–¥–Ω–µ–π'
        text = Template("$text1 <b>$wallet $sum</b>"
                        "$text2 <b>$days $day</b>"
                        "$text3: $date $text4")
        text = text.substitute(text1=Text_lang.mailing.left_days.text1, wallet=wallet, sum=Text_lang.symbol.sum,
                               text2=Text_lang.mailing.left_days.text2, days=days, day=day,
                               text3=Text_lang.mailing.left_days.text3, date=date,
                               text4=Text_lang.mailing.left_days.text4)
        return text

    async def mail_end(self, users: str):
        count = await pg.get_users_unblock(users=users)
        text = Template('–†–∞—Å—Å—ã–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –î–æ—Å—Ç–∞–≤–ª–µ–Ω–æ ‚Äî $nonblock –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º. '
                        '–ë–æ—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω ‚Äî $block –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏')
        text = text.substitute(nonblock=count[0][0], block=count[1][0])
        return text

    async def mailing_choose(self, users: str):
        if users == 'client':
            self.__type = '–ö–ª–∏–µ–Ω—Ç—ã'
        elif users == 'driver':
            self.__type = '–í–æ–¥–∏—Ç–µ–ª–∏'
        elif users == 'all':
            self.__type = '–í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏'
        await self.mailing()
        return self.__text

    async def mailing(self):
        text = Template("<b>$type</b>\n\n"
                        "$start_mailing")
        self.__text = text.substitute(type=self.__type,
                                      start_mailing="–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ—Ç–æ—Ä–æ–µ —Ö–æ—Ç–µ–ª–∏ –±—ã —Ä–∞–∑–æ—Å–ª–∞—Ç—å!")

    async def mailing_st(self):
        date = datetime.date.strftime(datetime.date.today(), "%d.%m.%Y")

        new_users = await func.int_to_str(num=await pg.new_users())
        new_drivers = await func.int_to_str(num=await pg.new_drivers())
        all_users = await func.int_to_str(num=await pg.all_users())
        all_drivers = await func.int_to_str(num=await pg.all_drivers())

        all_payment = await func.int_to_str(num=(await pg.all_payment())[0])
        all_payment_max = await func.int_to_str(num=(await pg.all_payment())[1])
        all_payment_min = await func.int_to_str(num=(await pg.all_payment())[2])
        all_payment_count = await func.int_to_str(num=(await pg.all_payment())[3])

        new_payment = await func.int_to_str(num=(await pg.new_payment())[0])
        new_payment_max = await func.int_to_str(num=(await pg.new_payment())[1])
        new_payment_min = await func.int_to_str(num=(await pg.new_payment())[2])
        new_payment_count = await func.int_to_str(num=(await pg.new_payment())[3])

        all_order_success = await func.int_to_str(num=(await pg.all_orders_success()))
        new_order_success = await func.int_to_str(num=(await pg.new_orders_success()))
        all_order_cancel_driver= await func.int_to_str(num=(await pg.all_order_cancel_driver()))
        new_order_cancel_driver = await func.int_to_str(num=(await pg.new_order_cancel_driver()))
        all_order_cancel_client = await func.int_to_str(num=(await pg.all_order_cancel_client()))
        new_order_cancel_client = await func.int_to_str(num=(await pg.new_order_cancel_client()))
        cancel_by_client_max = await func.int_to_str(num=(await pg.cancel_by_client())[0])
        cancel_by_client_min = await func.int_to_str(num=(await pg.cancel_by_client())[1])
        cancel_by_client_avg = await func.int_to_str(num=(await pg.cancel_by_client())[2])

        cancel_by_driver_max = await func.int_to_str(num=(await pg.cancel_by_driver())[0])
        cancel_by_driver_min = await func.int_to_str(num=(await pg.cancel_by_driver())[1])
        cancel_by_driver_avg = await func.int_to_str(num=(await pg.cancel_by_driver())[2])

        payment_type = await pg.all_payment_type()
        Click = await func.int_to_str(num=payment_type[0][0])
        Payme = await func.int_to_str(num=payment_type[1][0])
        Paynet = await func.int_to_str(num=payment_type[2][0])

        text = Template("–°–≤–æ–¥–∫–∞: $date\n\n"

                        "–ù–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ ‚Äî <b>$new_users</b>\n"
                        "–ù–æ–≤—ã–µ –≤–æ–¥–∏—Ç–µ–ª–∏ ‚Äî <b>$new_drivers</b>\n"
                        "–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π ‚Äî <b>$all_users</b>\n"
                        "–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–æ–¥–∏—Ç–µ–ª–µ–π ‚Äî <b>$all_drivers</b>\n\n"
                        "‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî\n\n"
                        "–°—É–º–º–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è —Å–µ–≥–æ–¥–Ω—è ‚Äî <b>$new_payment</b> —Å—É–º\n"
                        "–û–±—â–∞—è —Å—É–º–º–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è ‚Äî <b>$all_payment</b> —Å—É–º\n\n"
                        "‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî\n\n"
                        "‚úÖ –ù–æ–≤—ã–µ —É—Å–ø–µ—à–Ω—ã–µ –∑–∞–∫–∞–∑—ã: ‚Äî $new_order_success\n\n"
                        "‚úÖ –í –æ–±—â–µ–º —É—Å–ø–µ—à–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤: ‚Äî $all_order_success\n\n"
                        "‚ùå –ù–æ–≤—ã–µ –æ—Ç–º–µ–Ω—ë–Ω–Ω—ã–µ –∑–∞–∫–∞–∑—ã:\n"
                        "–ö–ª–∏–µ–Ω—Ç–æ–º: ‚Äî $new_order_cancel_client\n"
                        "–í–æ–¥–∏—Ç–µ–ª–µ–º: ‚Äî $new_order_cancel_driver\n\n"
                        "‚ùå –í –æ–±—â–µ–º –æ—Ç–º–µ–Ω—ë–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤:\n"
                        "–ö–ª–∏–µ–Ω—Ç–æ–º: ‚Äî $all_order_cancel_client\n"
                        "–í–æ–¥–∏—Ç–µ–ª–µ–º: ‚Äî $all_order_cancel_driver\n\n"
                        "‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî\n\n"
                        "–°—É–º–º–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è —Å–µ–≥–æ–¥–Ω—è:\n"
                        "‚Ä¢ –º–∞–∫—Å–∏–º—É–º ‚Äî $new_payment_max —Å—É–º\n"
                        "‚Ä¢ –º–∏–Ω–∏–º—É–º ‚Äî $new_payment_min —Å—É–º\n"
                        "‚Ä¢ <b>–∫–æ–ª-–≤–æ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–π ‚Äî $new_payment_count</b>\n\n"
                        "–ó–∞ –≤—Å–µ –≤—Ä–µ–º—è:\n"
                        "‚Ä¢ –º–∞–∫—Å–∏–º—É–º ‚Äî $all_payment_max —Å—É–º\n"
                        "‚Ä¢ –º–∏–Ω–∏–º—É–º ‚Äî $all_payment_min —Å—É–º\n"
                        "‚Ä¢ <b>–∫–æ–ª-–≤–æ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–π ‚Äî $all_payment_count</b>\n\n"
                        "–ú–µ—Ç–æ–¥ –æ–ø–ª–∞—Ç—ã:\n"
                        "‚Ä¢ Click ‚Äî $Click\n"
                        "‚Ä¢ Payme ‚Äî $Payme\n"
                        "‚Ä¢ Paynet ‚Äî $Paynet\n\n"
                        "‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî\n\n"
                        "‚õîÔ∏è–û—Ç–º–µ–Ω–∞ –∑–∞–∫–∞–∑–∞ 1 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º:\n"
                        "–ö–ª–∏–µ–Ω—Ç:\n"
                        "‚Ä¢ –º–∞–∫—Å–∏–º—É–º –æ—Ç–∫–ª–æ–Ω–µ–Ω–æ ‚Äî $cancel_by_client_max\n"
                        "‚Ä¢ –º–∏–Ω–∏–º—É–º ‚Äî $cancel_by_client_min\n"
                        "‚Ä¢ —Å—Ä–µ–¥–Ω–µ–µ ‚Äî $cancel_by_client_avg\n\n"
                        "–í–æ–¥–∏—Ç–µ–ª—å:\n"
                        "‚Ä¢ –º–∞–∫—Å–∏–º—É–º –æ—Ç–∫–ª–æ–Ω–µ–Ω–æ ‚Äî $cancel_by_driver_max\n"
                        "‚Ä¢ –º–∏–Ω–∏–º—É–º ‚Äî $cancel_by_driver_min\n"
                        "‚Ä¢ —Å—Ä–µ–¥–Ω–µ–µ ‚Äî $cancel_by_driver_avg\n")
        text = text.substitute(date=date,
                               new_users=new_users,
                               new_drivers=new_drivers,
                               all_users=all_users,
                               all_drivers=all_drivers,

                               all_payment=all_payment,
                               all_payment_max=all_payment_max,
                               all_payment_min=all_payment_min,
                               all_payment_count=all_payment_count,

                               new_payment=new_payment,
                               new_payment_max=new_payment_max,
                               new_payment_min=new_payment_min,
                               new_payment_count=new_payment_count,

                               all_order_success=all_order_success,

                               new_order_success=new_order_success,

                               all_order_cancel_driver=all_order_cancel_driver,

                               new_order_cancel_driver=new_order_cancel_driver,

                               all_order_cancel_client=all_order_cancel_client,

                               new_order_cancel_client=new_order_cancel_client,

                               Click=Click, Payme=Payme, Paynet=Paynet,

                               cancel_by_client_max=cancel_by_client_max,
                               cancel_by_client_min=cancel_by_client_min,
                               cancel_by_client_avg=cancel_by_client_avg,

                               cancel_by_driver_max=cancel_by_driver_max,
                               cancel_by_driver_min=cancel_by_driver_min,
                               cancel_by_driver_avg=cancel_by_driver_avg)
        # print(text)
        return text

